<?php

function dfc_points_award_menu() {
  $items['dfc/points/grant/video/%/%'] = array(
    'page callback' => 'dfc_points_award_video',
    'page arguments' => array(4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  $items['dfc/points/grant/link'] = array(
    'page callback' => 'dfc_points_award_link',
    //'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  $items['dfc/points/grant/share/%/%'] = array(
    'page callback' => 'dfc_points_award_share',
    'page arguments' => array(4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  $items['dfc/points/grant/slideshow/%/%'] = array(
    'page callback' => 'dfc_points_award_slideshow',
    'page arguments' => array(4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  /*
  // Returns AJAX commands if the user has JavaScript turned on.
  $items['dfc/points/award/ajax'] = array(
    'title' => 'My custom ajax callback',
    'page callback' => 'dfc_points_award_ajax_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  // Returns a Non-JavaScript alternative.
  $items['dfc/points/award/nojs'] = array(
    'title' => 'My custom non-javascript callback',
    'page callback' => 'dfc_points_award_nojs_callback',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  // The page that will run the command.
  $items['dfc/points/award/trigger-page'] = array(
    'title' => 'AJAX trigger page',
    'page callback' => 'dfc_points_award_trigger_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  */
  return $items;
}

// hook_form_alter
function dfc_points_award_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $role = is_array($user->roles) && in_array('administrator', $user->roles);

  if ($form_id == 'invite_form') {
    $form['#validate'][] = 'dfc_points_award_grant_points_invite_form_validate';
    $form['#submit'][] = 'dfc_points_award_grant_points_invite_form';
    $form['actions']['submit']['#submit'][] = 'dfc_points_award_grant_points_invite_form';
    
    // does it really take 3 spots to change 1 label? seems like it..
    $form['field_invitation_email_address'][LANGUAGE_NONE]['#title'] = t('Add E-mail');
    $form['field_invitation_email_address'][LANGUAGE_NONE][0]['#title'] = t('Add E-mail');
    $form['field_invitation_email_address'][LANGUAGE_NONE][0]['value']['#title'] = t('Add E-mail');
    
    // also inject an anchor tag below for anchoring to uploads below it?
    $form['#suffix'] = '<div style="float:left;width:100%"><a name="upload"></a></div>';
    
    //watchdog('fcatc', '<pre>'. print_r($form['field_invitation_email_address'], true) .'</pre>');
    
  } else if ($form_id == 'user_profile_form') {
    // change user picture area some things
    //$form['picture']['#type'] = 'div';
    // change size of upload field?
    $form['picture']['picture_upload']['#size'] = 24;
    // change the Profile Picture / Upload Picture label
    $form['picture']['picture_upload']['#title'] = t('Profile Picture');
    // wipe the default Upload Picture description
    $form['picture']['picture_upload']['#description'] = '';
    // wipe the default Delete Picture description
    $form['picture']['picture_delete']['#description'] = '';
    // also hide club id field
    $form['field_club_id']['#access'] = 0;
  } else if ($form_id == 'user_media_node_form') {
    $form['#submit'][] = 'dfc_points_award_user_media_type_validate';
    $form['#submit'][] = 'dfc_points_award_user_media_type_assign';
  } else if ( in_array( $form_id, array( 'commerce_cart_add_to_cart_form_1', 'commerce_cart_add_to_cart_form_2', 'commerce_cart_add_to_cart_form_3', 'commerce_cart_add_to_cart_form_4' ) ) ) {
    // check if this is for a Membership : is this the right check?
    if ( $form['#action'] == '/membership' ) {
      $form['submit']['#attributes']['title'] = $form['submit']['#attributes']['value'] = t('Select');
    }
  }
  //watchdog('dfalt', 'form_id '. $form_id .' <pre>'. print_r($form,true) .'</pre>');
}

function dfc_points_award_user_media_type_validate(&$form, &$form_state) {
  //make sure at least one media item is uploaded and it's not too big
  $img = $form_state['values']['field_image'][LANGUAGE_NONE][0]['fid'];
  $vid = $form_state['values']['field_media_link'][LANGUAGE_NONE][0]['fid'];
  if (!($img || $vid)) {
    form_set_error('', 'Did you want to upload something?');
  }
}

function dfc_points_award_user_media_type_assign(&$form, &$form_state) {
  $value = 3;
  if ($form_state['values']['field_media_link'][LANGUAGE_NONE][0]['fid']) {
    $value = 4;
  }
  $form_state['values']['field_media_type'][LANGUAGE_NONE][0]['tid'] = $value;
}

function dfc_points_award_node_view($node, $view_mode, $langcode) {
  // in any case make sure maybe we have better_messages?
  if ( function_exists('better_messages_add_files') ) {
    better_messages_add_files( false );
  }
  
  if ($node->type == 'media_item') {
    
    $cat = $node->field_media_category[LANGUAGE_NONE][0]['tid'];
    if ( ( arg(0) == 'node' ) && ( arg(1) == $node->nid ) ) {
      // set up our custom JS for triggering points for watching a video
      $mtype = $node->field_media_type[LANGUAGE_NONE][0]['tid'];
      if ( $mtype == 3 ) {
        // image media type
        dfc_points_award_image( $node->nid );
      }
      
      // by default, must watch the video for 10 minutes to get credit
      $threshold = 10 * 60;
      if ($cat == 17) {
        // for Advertisements, watching for 30 seconds is enough
        $threshold = 30;
      } else if ($cat == 6) {
        // for Sponsored video, 2 minutes is ok
        $threshold = 60 * 2;
      }
      $settings['dfcPointsAward']['awarded'] = dfc_points_award_check_video_awarded($node->nid);
      $settings['dfcPointsAward']['threshold'] = $threshold;
      $settings['dfcPointsAward']['vid'] = $node->nid;
      $settings['dfcPointsAward']['vcode'] = dfc_points_award_get_random_string();
      //$settings['dfcPointsAward']['mtype'] = $mtype;
      drupal_add_js($settings, 'setting');
      drupal_add_js(drupal_get_path('module', 'dfc_points_award') . '/js/award_video.js');
      
      $desc_weight = $node->content['field_product_description']['#weight'];
      // on media details, inject # Points field right after Description
      $node->content['dfc_points'] = array(
        '#tag' => 'div', // Wrap it in a div?
        '#type' => 'html_tag',
        '#attributes' => array('class' => 'dfc-points' ),
        '#value' => '<span class="pts-value">'. dfc_points_award_points_by_cat( $cat ) .'</span> Points',
        '#weight' => $desc_weight + 1
      );
      /*
      // if theres also Related Terms, make sure Related Terms weight is next
      if ( isset( $node->content['field_related_terms'] ) ) {
        $node->content['field_related_terms']['#weight'] = $desc_weight + 2;
      }
      */
    } else {
      // some other view, like Related Content
      //watchdog('rv', 'node <pre>'. print_r($node,true) .'</pre>');
      
      // add extra link on top of video area
      $node->content['vlink'] = array(
        '#tag' => 'div',
        '#type' => 'html_tag',
        '#attributes' => array(),
        '#value' => l('View Video', 'node/'. $node->nid, array(
          'attributes' => array(
            'class' => array( 'vlink' )
          )
        )),
        '#weight' => 10
      );
      $node->content['dfc_points'] = array(
        '#tag' => 'div', // Wrap it in a div?
        '#type' => 'html_tag',
        '#attributes' => array('class' => 'dfc-points' ),
        '#value' => '<span class="pts-value">'. dfc_points_award_points_by_cat( $cat ) .'</span> Points',
        '#weight' => 9
      );
    }
  } else if ( $node->type == 'landing_page' ) {
    $settings['dfcPointsAward']['vid'] = $node->nid;
    drupal_add_js($settings, 'setting');
    drupal_add_js(drupal_get_path('module', 'dfc_points_award') . '/js/award_video.js');
  } else if ( ( $node->type == 'resort' ) || ( $node->type == 'staff' ) ) {
    // we need to inject an extra nid html tag for the share points to hook to..
    $node->content['share_vid'] = array(
      '#tag' => 'div', // Wrap it in a div?
      '#type' => 'html_tag',
      '#attributes' => array('class' => 'share_vid', 'data-share-vid' => $node->nid ),
      '#value' => '',
      '#weight' => intval(variable_get('sharethis_weight', 10)) + 1,
    );
  }
  //watchdog('nload', '<pre>'. print_r($node,true) .'</pre>');
}

function dfc_points_award_preprocess_views_view_field(&$vars) {
  $view = $vars['view'];
  $field = &$vars['field'];
  $row = $vars['row'];
  if($view->name == 'media_items' ) {
    if( in_array( $view->current_display, array('block', 'block_3', 'block_4'))) {
      if( $field->field == 'nothing') {
        $cat = 0;
        if ( isset( $row->_field_data['nid']['entity'] ) ) {
          if ( isset( $row->_field_data['nid']['entity']->field_media_category ) ) {
            if ( isset( $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE] ) ) {
              if ( isset( $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE][0] ) ) {
                if ( isset( $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE][0]['tid'] ) ) {
                  $cat = $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE][0]['tid'];
                }
              }
            }
          }
        }
        $points = dfc_points_award_points_by_cat($cat);
        $vars['output'] = "<span class='pts-value'>{$points}</span> Points";
      }
      if ( $field->field == 'field_media_category' ) {
        // inject class if 'Member Photo' / 'DFC Exclusive Photo'
        if ( strpos( $vars['output'], 'Photo') !== false ) {
          $vars['output'] = str_replace( 'field--media-category', 'field--media-category photo', $vars['output'] );
        }
      }
      if ( $field->field == 'field_media_link' ) {
        // add extra link on top of video area
        $vars['output'] .= l('View Video', 'node/'. $row->_field_data['nid']['entity']->nid, array(
          'attributes' => array(
            'class' => array( 'vlink' )
          )
        ));
      }
    }
    // top section view block
    
    if( $view->current_display == 'block_1' ) {
      if( $field->field == 'nothing') {
        $cat = 0;
        if ( isset( $row->_field_data['nid']['entity'] ) ) {
          if ( isset( $row->_field_data['nid']['entity']->field_media_category ) ) {
            if ( isset( $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE] ) ) {
              if ( isset( $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE][0] ) ) {
                if ( isset( $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE][0]['tid'] ) ) {
                  $cat = $row->_field_data['nid']['entity']->field_media_category[LANGUAGE_NONE][0]['tid'];
                }
              }
            }
          }
        }
        $points = dfc_points_award_points_by_cat($cat);
        $vars['output'] = "<span class='pts-value'>{$points}</span> Points";
      }
      if ( $field->field == 'field_media_link' ) {
        // add extra link on top of video area
        $vars['output'] .= l('View Video', 'node/'. $row->_field_data['nid']['entity']->nid, array(
          'attributes' => array(
            'class' => array( 'vlink' )
          )
        ));
      }
    }
  }
  //display store items in points
  if($view->name == 'store' && $field->field == 'commerce_price') {
    $points = number_format( dfc_points_award_get_points_conversion($row->field_commerce_price[0]['raw']['amount'] ) );
    if ($vars['output']) {
      $vars['output'] .= " / <span class='pts-value'>{$points}</span> Points";
    }
  }
}

function dfc_points_award_video($vid) {
  $ret = array('success' => FALSE);
  $node = node_load($vid);
  $cat = $node->field_media_category[LANGUAGE_NONE][0]['tid'];

  $points = dfc_points_award_points_by_cat($cat);
  if(!dfc_points_award_check_video_awarded($vid)) {
    $video_points = array(
        'points' => $points,
        'entity_type' => 'node',
        'entity_id' => $vid,
        'operation' => 'dfc_points_award_video',
        'display' => false
    );
    dfc_points_award_grant_points($video_points);
    watchdog('dfc', 'awarding video points');
    $ret['success'] = TRUE;
  }

  drupal_json_output($ret);
}

function dfc_points_award_image( $nid ) {
  // only award points for viewing image on image details page :
  //watchdog('dfcpaw', 'dfc_points_award_image('. $nid .') : arg0 = '. arg(0) .' / arg1 = '. arg(1) );
  
  if ( ( arg(0) == 'node' ) && ( arg(1) == $nid ) ) {
    //$node = node_load($vid);
    $cat = 3; //$node->field_media_type[LANGUAGE_NONE][0]['tid'];
    $op = 'dfc_points_award_image';
    $points = dfc_points_award_points_by_cat($cat);
    if( !dfc_points_award_check_points_awarded( $nid, $op ) ) {
      $award_points = array(
          'points' => $points,
          'entity_type' => 'node',
          'entity_id' => $nid,
          'operation' => $op
      );
      dfc_points_award_grant_points($award_points);
      watchdog('dfc', 'awarding image points : <pre>'. print_r($award_points,true) .'</pre>');
    } else {
      //watchdog( 'dfc', 'already got pts for nid '. $nid .' op '. $op );
    }
  } else {
    //watchdog('dfc', 'also loaded '. $nid .' but not on that details?');
  }
}

function dfc_points_award_points_by_cat($cat) {
  // default everything points to 5 points
  $points = 5;
  // Media Category of some Videos
  if ( in_array( $cat, array( 5, 7 ) ) ) {
    // cat ID 5 = Member video, 7 = TV Episode
    $points = 10;
  }

  return $points;
}

// for a more robust, see below dfc_points_award_check_points_awarded
function dfc_points_award_check_video_awarded($vid) {
  global $user;
  $chk = db_select('userpoints_txn', 'upt')
      ->fields('upt')
      ->condition('uid', $user->uid)
      ->condition('entity_type', 'node')
      ->condition('entity_id', $vid)
      ->execute()->fetchAssoc();

  if($chk) {
    return TRUE;
  }
  return FALSE;
}

// query userpoints_txn table direct to see if op points are given
function dfc_points_award_check_points_awarded( $nid, $op ) {
  global $user;
  $chk = db_select('userpoints_txn', 'upt')
      ->fields('upt')
      ->condition('uid', $user->uid)
      ->condition('entity_type', 'node')
      ->condition('entity_id', $nid)
      ->condition('operation', $op)
      ->execute()->fetchAssoc();

  if($chk) {
    return TRUE;
  }
  return FALSE;
}

function dfc_points_award_link () {
  if ($l = $_GET['l']) {
    $ls = substr($l, 128);
    global $user;
    //@todo verify url validity, don't grant points for just any url?
    $chk = db_select('userpoints_txn', 'upt')
        ->fields('upt')
        ->condition( 'uid', $user->uid )
        ->condition( 'reference', $ls )
        ->condition( 'reference', 'dfc_points_award_link' )
        ->execute()->fetchAssoc();

    if(!$chk) {
      $link_points = array(
        'points' => 5,
        'reference' => $ls,
        'operation' => 'dfc_points_award_link'
      );
      dfc_points_award_grant_points($link_points);
      watchdog('dfc', 'awarding link points: ' . $l .' : <pre>'. print_r($link_points,true) .'</pre>');
    }
    drupal_goto($l);
  }
}
// "page" callback for sharing some nid to twitter or facebook
function dfc_points_award_share( $wher, $nid ) {
  if ( in_array( $wher, array( 'tw', 'fb' ) ) ) {
    
    $node = node_load( (int) $nid );
    if ( $node !== FALSE ) {
      //watchdog('nchk', '<pre>'. print_r($node,true) .'</pre>');
      if ( in_array( $node->type, array( 'media_item', 'resort', 'staff' ) ) ) {
        $op = 'dfc_points_award_share_'. $wher;
        global $user;
        //@todo node load nid
        $chk = db_select('userpoints_txn', 'upt')
            ->fields('upt')
            ->condition('uid', $user->uid)
            ->condition('entity_type', 'node')
            ->condition('entity_id', $nid)
            ->condition('operation', $op)
            ->execute()->fetchAssoc();

        if(!$chk) {
          $link_points = array(
            'points' => 5,
            'entity_type' => 'node',
            'entity_id' => $nid,
            'operation' => $op,
            'display' => false
          );
          dfc_points_award_grant_points($link_points);
          watchdog('dfc', 'awarding share points: <pre>' . $link_points .'</pre>');
          return '5';
        } else {
          //drupal_set_message('you already tweeted and got points for '. $nid, 'warning');
          return '0';
        }
      }
    }
  }
}
// "page" callback for clicking through some gallery
function dfc_points_award_slideshow( $nid, $count ) {
  $node = node_load( (int) $nid );
  if ( $node !== FALSE ) {
    //watchdog('nchk', '<pre>'. print_r($node,true) .'</pre>');
    if ( in_array( $node->type, array( 'landing_page', 'resort', 'staff' ) ) ) {
      $op = 'dfc_points_award_slideshow';
      global $user;
      //@todo node load nid
      $chk = db_select('userpoints_txn', 'upt')
          ->fields('upt')
          ->condition('uid', $user->uid)
          ->condition('entity_type', 'node')
          ->condition('entity_id', $nid)
          ->condition('operation', $op)
          ->execute()->fetchAssoc();

      if(!$chk) {
        $link_points = array(
          'points' => 5,
          'entity_type' => 'node',
          'entity_id' => $nid,
          'operation' => $op,
          'display' => false
        );
        dfc_points_award_grant_points($link_points);
        watchdog('dfc', 'awarding share points: <pre>' . $link_points .'</pre>');
      } else {
        //drupal_set_message('you already tweeted and got points for '. $nid, 'warning');
      }
    }
  }
}

function dfc_points_award_grant_points_invite_form_validate(&$form, &$form_state) {
  global $user;
  $max_invites = 10;
  $email = $form_state['values']['field_invitation_email_address'][LANGUAGE_NONE][0]['value'];

  $q = db_select('invite', 'i')
    ->fields('i')
    ->condition('uid', $user->uid)
    ->condition('fiea.field_invitation_email_address_value', $email)
    ->condition('expiry', time(), '>');
  $q->join('field_data_field_invitation_email_address', 'fiea', 'i.iid = fiea.entity_id');
  $chk = $q->execute()->rowCount();

  if($chk) {
    form_set_error('invitation_email_address', "You've already invited {$email}");
    return FALSE;
  }

  $num = db_select('invite', 'i')
    ->fields('i')
    ->condition('uid', $user->uid)
    ->condition('joined', 0)
    ->condition('canceled', 0)
    ->condition('expiry', time(), '>')
    ->execute()->rowCount();

  if($num >= $max_invites) {
    form_set_error('invitation_email_address', "You already have {$max_invites} invites pending.");
    return FALSE;
  }

  return TRUE;
}

function dfc_points_award_grant_points_invite_form(&$form, &$form_state) {
  $invite_points = 10;
  dfc_points_award_grant_points($invite_points);
  $form_state['redirect'] = '/user';
}

function dfc_points_award_grant_points($points) {
  //earned points go to monthly category
  if (!is_array($points)) {
    $pts = $points;
    $points = array('points' => $points);
  }
  $points['tid'] = 1;

  userpoints_userpointsapi($points);
}

//function dfc_points_award_grant_points_upload(&$form, &$form_state) {
//  global $user;
//  $u = user_load($user->uid);
//
//  if($form_state['values']['field_user_images']) {
//    $imgs_num_u = isset($u->field_user_images[LANGUAGE_NONE]) ? sizeof($u->field_user_images[LANGUAGE_NONE]) : 0;
//    $imgs_num_f = sizeof($form_state['values']['field_user_images'][LANGUAGE_NONE]);
//
//    if ($form_state['values']['field_user_images'][LANGUAGE_NONE][0]['fid'] == 0) {
//      $imgs_num_f--;
//    }
//
//    if ($imgs_num_f > $imgs_num_u) {
//      //new upload, award points
//      dfc_points_award_grant_points(10);
//    }
//  }
//}

function dfc_points_award_rules_condition_info() {
  return array(
    'dfc_points_award_condition_check_refer' => array(
      'label' => t('Check if user was referred'),
      'arguments' => array(
        'user' => array('type' => 'user', 'label' => t('User Signing Up')),
      ),
      'group' => t('DFC'),
    ),
  );
}

function dfc_points_award_rules_action_info() {
  return array(
    'dfc_points_award_action_load_invite_user' => array(
      'label' => t('Load inviting user'),
      'arguments' => array(
          'user' => array('type' => 'user', 'label' => t('User Signing Up')),
      ),
      'provides' => array(
        'invite_user' => array(
          'type' => 'user',
          'label' => t('Invite User'),
          'save' => TRUE,
        ),
      ),
      'group' => t('DFC'),
    )
  );
}

function dfc_points_award_condition_check_refer($user) {
  if(dfc_points_award_action_load_invite_user($user)) {
    return TRUE;
  }
  return FALSE;
}

/*
 * Given an email address, check to see if that user was invited, and load the invitation
 */
function dfc_points_award_action_load_invite_user($user) {
  if ( isset( $user->mail ) ) {
    $email = $user->mail;
    if ( $email != '' ) {
      $q = db_select('invite', 'i')
        ->fields('i')
        ->condition('fiea.field_invitation_email_address_value', $email);
      $q->join('field_data_field_invitation_email_address', 'fiea', 'i.iid = fiea.entity_id');
      $invite = $q->execute()->fetchAssoc();
      if ( isset( $invite['uid'] ) ) {
        if ($invite['uid']) {
          $invite_user = user_load($invite['uid']);
          if ($invite_user) {
            return array('invite_user' => $invite_user);
          }
        }
      }
    }
  }
  // else
  return FALSE;
}

function dfc_points_award_get_points_conversion($amount) {
  $currencies = commerce_userpoints_currencies();
  $c = array();
  foreach ($currencies as $cur) {
    if ($cur['code'] == 'Points') {
      $c = $cur;
    }
  }
  $conversion_rate = (float)$c['conversion_rate'];
  if (is_numeric($amount)) {
    $points_value = ( $amount / 100 ) / $conversion_rate;
    return (int)$points_value;
  }
}

function dfc_points_award_get_random_string($length = 10) {
  $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  $charactersLength = strlen($characters);
  $randomString = '';
  for ($i = 0; $i < $length; $i++) {
    $randomString .= $characters[rand(0, $charactersLength - 1)];
  }
  return $randomString;
}
/*
function dfc_points_award_trigger_page() {
  // Load in Drupal core AJAX library.
  drupal_add_library('system', 'drupal.ajax');
 
  // Load in our custom JavaScript.
  drupal_add_js(drupal_get_path('module', 'dfc_points_award') . '/js/ajaxtest.js');
 
  // Present the user with a link with the id 'my-special-link'.
  $oot = l('Get share points', 'dfc/points/award/nojs', array(
    'attributes' => array(
      'id' => 'my-special-link',
      'class' => array( 'button' )
    )
  ));
  
  $oot .= ' '. l('Another trigger chain', '', array(
    'attributes' => array(
      'class' => array( 'button', 'triggererd' )
    )
  ));
  
  return $oot;
}

// AJAX callback that prints hello world underneath our link.
function dfc_points_award_ajax_callback() {
  // Define a new array to hold our AJAX commands.
  $ajax_commands = array();
  
  // Create a new AJAX command that replaces the #page text with our own text.
  $ajax_commands[] = ajax_command_after('#my-special-link', 'You have earned 5 Points?');
   
  // Return our commands in JSON.
  ajax_deliver(array('#type' => 'ajax', '#commands' => $ajax_commands));
}

// Non-JavaScript callback that returns whatever
function dfc_points_award_nojs_callback() {
  return 'You have earned 5 Points?';
}
*/

// Implements hook_userpoints_info().
function dfc_points_award_userpoints_info() {
  // one callback to rule them all
  $ar = array(
    'description callback' => 'dfc_points_award_userpoints_description_callback'
  );
  // and return our new points actions
  return array(
    'dfc_points_award_image' => $ar,
    'dfc_points_award_link' => $ar,
    'dfc_points_award_video' => $ar,
    'dfc_points_award_share_tw' => $ar,
    'dfc_points_award_share_fb' => $ar,
    'dfc_points_award_slideshow' => $ar
  );
}

// Description callback for userpoint operation description/reason.
function dfc_points_award_userpoints_description_callback($operation, $entity) {

  $arguments = array();
  // Try to load content type name.
  if ($operation->entity_type == 'node' && $entity) {
    $arguments['%title'] = $entity->title;
  }

  // Fallback to string content if the above failed for some reason.
  if (empty($arguments['%title'])) {
    $arguments['%title'] = t('content');
  }

  switch ($operation->operation) {
    case 'dfc_points_award_image':
      return t('Viewed Photo "%title"', $arguments);
      break;
    case 'dfc_points_award_link':
      return t('Viewed Sponsored Link / Ad', $arguments);
      break;
    case 'dfc_points_award_video':
      return t('Watched Video "%title"', $arguments);
      break;
    case 'dfc_points_award_share_fb':
      return t('Shared "%title" on Facebook', $arguments);
      break;
    case 'dfc_points_award_share_tw':
      return t('Tweeted about "%title"', $arguments);
      break;
    case 'dfc_points_award_slideshow':
      return t('Viewed Slideshow for "%title"', $arguments);
      break;
	}
  
}
