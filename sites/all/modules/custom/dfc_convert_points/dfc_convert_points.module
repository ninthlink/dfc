<?php
/**
 * Implements hook_block_info().
 */
function dfc_convert_points_block_info() {
  $blocks = array();
  $blocks['giveaway_countdown'] = array(
    'info' => t('Giveaway Countdown'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function dfc_convert_points_block_view($delta='') {
  $block = array();
  
  switch($delta) {
    case 'giveaway_countdown' :
      $prize_query = new EntityFieldQuery();
      $prize_query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'giveaway_prize')
        ->propertyCondition('status', NODE_PUBLISHED)
        ->fieldCondition('field_month_and_year', 'value', date('Y-m-01 00:00:00'), '=')
        ->range(0, 1);

      $prize_result = $prize_query->execute();
    
    if(isset($prize_result['node'])) {
      $prize_nids = array_keys($prize_result['node']);
      $prize_nid = reset($prize_nids);
      $prize = node_load($prize_nid);
      $prize_date = 
      $block['content'] = '<div id="countdown_title">'.t('Giveaway Countdown').'</div>';
      $block['content'] .= '<div id="countdown_sponsor">'.$prize->field_sponsor[LANGUAGE_NONE][0]['value'].'</div>';
      $block['content'] .= '<div id="countdown_prize">'.$prize->title.'</div>';
      $block['content'] .= '<div class="jquery-countdown jquery-countdown-processed hasCountdown" id="jquery-countdown-giveaway-countdown">
        <span class="countdown_row countdown_show4" id="jquery-countdown-giveaway-countdown-span"></span></div>
        <script type="text/javascript">
          jQuery("#jquery-countdown-giveaway-countdown-span").countdown("'.date("Y/m/01", strtotime('+1 month')).'", function(event) {
            if(event.offset.days < 1) {
              jQuery(this).addClass("last_day")
            }
            jQuery(this).html(
              event.strftime("<span class=\'countdown_section\'><span class=\'countdown_amount\'>%D</span><br>Days</span>"
              +"<span class=\'countdown_section\'><span class=\'countdown_amount\'>%H</span><br>Hours</span>"
              +"<span class=\'countdown_section\'><span class=\'countdown_amount\'>%M</span><br>Minutes</span>"
              +"<span class=\'countdown_section\'><span class=\'countdown_amount\'>%S</span><br>Seconds</span>")
            );
          });
        </script>';
      break;
    }
  }
  
  return $block;
}

function dfc_convert_points_cron(){
  $cur_month = date('n');
  $last_month = date('Y-m-01 00:00:00', strtotime('-1 month'));
  $points_converted_month = variable_get('points_coverted_month', 0);
  if($points_converted_month <> $cur_month){
    //find giveaway winner
    $prize_query = new EntityFieldQuery();
    $prize_query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'giveaway_prize')
      ->propertyCondition('status', NODE_PUBLISHED)
      ->fieldCondition('field_month_and_year', 'value', $last_month, '=')
      ->range(0, 1);

    $prize_result = $prize_query->execute();
    
    if(isset($prize_result['node'])) {
      $prize_nids = array_keys($prize_result['node']);
      $prize_nid = reset($prize_nids);
      $prize = node_load($prize_nid);
  
      $giveaway_result = db_select('userpoints', 'u')
        ->fields('u', array('points', 'uid'))
        ->condition('tid', 1, '=')
        ->orderBy('points', 'DESC')
        ->range(0, 1)
        ->execute();
      $giveaway_winner = $giveaway_result->fetchAssoc();
      $prize->field_winner[LANGUAGE_NONE][0]['target_id'] = $giveaway_winner['uid'];
      $prize->field_winners_points[LANGUAGE_NONE][0]['value'] = $giveaway_winner['points'];
      node_save($prize);
    }
    //convert monthly points to lifetime points
    $num_updated = db_update('userpoints_txn')
      ->fields(array(
        'tid' => 0,
      ))
      ->condition('tid', 1, '=')
      ->execute();
  
    $result = db_select('userpoints', 'u')
      ->fields('u', array('points', 'max_points', 'uid', 'tid', 'pid'))
      ->orderBy('tid', 'ASC')
      ->execute();
    while($record = $result->fetchAssoc()){
      if($record['tid'] == 0){
        $lifetime_points[$record['uid']] = $record;
      }elseif($record['tid'] ==1){
        if(!isset($lifetime_points[$record['uid']])){
          $num_updated = db_update('userpoints')
            ->fields(array(
              'tid' => 0,
            ))
          ->condition('pid', $record['pid'], '=')
          ->execute();
        }else{
          $points = $lifetime_points[$record['uid']]['points'] + $record['points'];
          $max_points = $lifetime_points[$record['uid']]['max_points'] + $record['max_points'];
          $num_updated = db_update('userpoints')
            ->fields(array(
              'points' => $points,
              'max_points' => $max_points
            ))
          ->condition('pid', $lifetime_points[$record['uid']]['pid'], '=')
          ->execute();
          $num_deleted = db_delete('userpoints')
            ->condition('pid', $record['pid'])
            ->execute();
        }
      }
    }
    variable_set('points_coverted_month', $cur_month);
  }
}
?>