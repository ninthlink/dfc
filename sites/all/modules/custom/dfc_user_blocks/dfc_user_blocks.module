<?php
/**
 * Implements hook_block_info().
 */
function dfc_user_blocks_block_info() {
  $blocks = array();
  $blocks['your_membership'] = array(
    'info' => t('Your Membership'),
  );
  $blocks['membership_benefits'] = array(
    'info' => t('Membership Benefits'),
  );
  $blocks['account_form'] = array(
    'info' => t('Account Form'),
  );
  return $blocks;
}

function dfc_user_blocks_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'your_membership':
      $block['content'] = array(
        '#markup' =>  dfc_user_blocks_your_membership_view()
      );
      break;
    case 'membership_benefits':
      $block['content'] = array(
        '#markup' =>  dfc_user_blocks_membership_benefits_view()
      );
      break;
    case 'account_form':
      $block['content'] = array(
        '#markup' =>  dfc_user_blocks_account_form_view()
      );
      break;
  }

  return $block;
}

function dfc_user_blocks_account_form_view(){
  global $user;
  $user=user_load($user->uid);
  module_load_include('inc', 'user', 'user.pages');
  $user_form = drupal_get_form('user_profile_form', $user);
  return drupal_render($user_form);
}

function dfc_user_blocks_your_membership_view(){
  global $user;
  $user = user_load($user->uid);
  foreach($user->roles as $role){
    if(in_array($role, array('Silver', 'Gold', 'Platinum', 'Diamond'))){
      break;
    }
  }
  // do we always show title?
  $markup = '<h3 class="membership-title">'. t('YOUR MEMBERSHIP') .'</h3>';
  // Current...  
  $current_markup = dfc_user_blocks_markup_wrapper( t('Current Membership Level:'), array('class' => 'current-membership-title'), 'h5' );
  $current_markup .= dfc_user_blocks_markup_wrapper($role, array('class' => 'current-role'), 'h2');
  //$current_markup .= dfc_user_blocks_markup_wrapper('Your annual membership is scheduled to auto-renew on ', array('class' => 'auto-renew'));
  $markup .= dfc_user_blocks_markup_wrapper($current_markup, array('class' => 'current-membership-wrapper'));
  // Upgrade...
  if($role <> 'Diamond'){
    $upgrade_markup = dfc_user_blocks_markup_wrapper( t('Want to upgrade?'), array('class' => 'upgrade-membership-title'), 'h5' );
    $upgrade_markup .= l(t('Membership Levels'), '/membership', array( 'attributes' => array( 'class' => array( 'button', 'button-small' ) ) ));
    $markup .= dfc_user_blocks_markup_wrapper($upgrade_markup, array('class' => 'upgrade-membership-wrapper'));
  }
  return $markup;
}

function dfc_user_blocks_membership_benefits_view(){
  global $user;
  $user = user_load($user->uid);
  foreach($user->roles as $role){
    if(in_array($role, array('Silver', 'Gold', 'Platinum', 'Diamond'))){
      break;
    }
  }
  if(isset($role)){
    $bean = bean_block_view(strtolower($role).'-benefits');
    return theme('bean', $bean);
  }
}

function dfc_user_blocks_markup_wrapper($markup, $attributes = NULL, $tag = 'div') {
  if ( $tag == 'usermenu' ) {
    $output = '<span class="icon"></span><span class="title">'. $markup .'</span>';
    if (isset($attributes) && is_array($attributes)) {
      if ( isset( $attributes['count'] ) ) {
        $output .= '<span class="count">'. $attributes['count'] .'</span>';
      }
    }
  } else {
    $attrs = '';
    if (isset($attributes) && is_array($attributes)) {
      foreach($attributes as $k => $v) {
        $attrs .= " $k='$v'";
      }
    }
    $output = "<$tag$attrs>$markup</$tag>";
  }
  return $output;
}

// hook_init per http://stackoverflow.com/a/32458844
function dfc_user_blocks_init() {
  if ( arg(0) == 'user' ) {
    if ( arg(2) == 'edit' ) {
      $options = array();
      // with password resets like /user/#/edit?pass-reset-token=sometoken
      if ( isset( $_GET['pass-reset-token'] ) ) {
        $options['query'] = array(
          'pass-reset-token' => $_GET['pass-reset-token']
        );
      }
      
      drupal_goto( 'user/'. arg(1), $options );
    }
    if ( arg(2) == 'order' ) {
      // redirect 'order' to 'orders'
      drupal_goto( 'user/'. arg(1) .'/orders/'. arg(3) );
    }
  }
}

// is shipping / checkout stuff counting as user blocks?
// this is all for membership so..

function _dfc_is_shipable($order_number) {
  $shipable = false;
  $wrapper = entity_metadata_wrapper('commerce_order', $order_number);
  foreach ($wrapper->commerce_line_items as $line_item) {
    // Retrieve the product type to see if its a type that allows shipping. If at least one item requires shipping,
    // then the order is considered shipable.
    
    //$item = commerce_line_item_load($line_item['line_item_id']);
    if ( isset( $line_item->commerce_product ) ) {
      $product_id = $line_item->commerce_product->raw();
      $prod = commerce_product_load( $product_id );
      //watchdog('order chk', $order_number .' : <pre>'. print_r($prod,true) .'</pre>');
      if ( $prod->type == 'product' ) {
        $shipable = true;
      }
    }
  }
  return $shipable;
}

// hook commerce_checkout_pane_info_alter
function dfc_user_blocks_commerce_checkout_pane_info_alter(&$checkout_panes) {
  global $user;
  // will this work for anon users too?
  $order = commerce_cart_order_load($user->uid);
  if ($order) {
    if (!_dfc_is_shipable($order->order_number)) {
      // unset shipping
      unset( $checkout_panes['customer_profile_shipping'] );
      // also unset userpoint exchange because no for membership
      unset( $checkout_panes['commerce_userpoints_discount'] );
    }
  }
  //watchdog('panealt', '<pre>'. print_r($checkout_panes,true) .'</pre><br />order : <pre>'. print_r($order,true) .'</pre>');
}

// hook commerce_checkout_router
function dfc_user_blocks_commerce_checkout_router($order, $checkout_page) {
  if ($checkout_page['page_id'] == 'shipping') {
    if (!_dfc_is_shipable($order->order_number)) {
      // Support going backwards & forwards in the cart.
      if (t('Customer continued to the next checkout page via a submit button.') == $order->log) {
        $order = commerce_order_status_update($order, 'checkout_' . $checkout_page['next_page'], FALSE, TRUE, t('Shipping was skipped - not required for these products.'));
        drupal_goto('checkout/' . $order->order_id . '/' . $checkout_page['next_page']);
      }
      else {
        $order = commerce_order_status_update($order, 'checkout_checkout', FALSE, TRUE, t('Shipping was skipped - not required for these products.'));
        drupal_goto('checkout/' . $order->order_id . '/checkout');
      }
    }
  }
}

function dfc_user_blocks_form_alter(&$form, &$form_state, $form_id) {
  if ( $form_id == 'commerce_checkout_form_complete' ) {
    $msg = '<div class="checkout-completion-message">';
    if ( isset( $form_state['order'] ) ) {
      $order = $form_state['order'];
      if ( !_dfc_is_shipable( $order->order_number ) ) {
        $msg .= '<p>'. t('Thank you for joining the Dollar Fishing Club! You will be receiving an email shortly with instructions on how to complete your membership, set-up your profile and start earning your piece of $1 Million dollars in trips, perks and gear.') .'</p>';
      } else {
        //$msg .= t('ORDER IS SHIPABLE : ITS REAL PRODUCTS?!');
      }
      
      $order_url = 'user/'. $order->uid .'/order/'. $order->order_number;
      
      $msg .= '<p>'. t('Your order number is @num. ', array('@num' => $order->order_number ) ) . t('You can !view_order on your account page when logged in.', array( '!view_order' => l( t('view your order'), $order_url ) ) ) .'</p>';
    }
    $msg .= '<p>'. l( t('Return to Home Page'), '' ) .'</p></div>';
    
    $form['checkout_completion_message']['message']['#markup'] = $msg;
  }
}

/**
 * Implements hook_commerce_price_component_type_info().
 */
function dfc_user_blocks_commerce_price_component_type_info_alter( &$components ) {
  if( isset( $components['userpoints'] ) ) {
    if( !empty( $components['userpoints'] ) ) {
      $components['userpoints']['title'] = t('Points Credit');
      $components['userpoints']['display_title'] = t('Points Credit');
    }
  }
}