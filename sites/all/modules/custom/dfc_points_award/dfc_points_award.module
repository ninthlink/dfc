<?php

function dfc_points_award_menu() {
  $items['dfc/points/grant/video/%/%'] = array(
    'page callback' => 'dfc_points_award_video',
    'page arguments' => array(4, 5),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  $items['dfc/points/grant/link'] = array(
    'page callback' => 'dfc_points_award_link',
    //'page arguments' => array(),
    'type' => MENU_CALLBACK
  );
  return $items;
}

function dfc_points_award_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'invite_form') {
    $form['#validate'][] = 'dfc_points_award_grant_points_invite_form_validate';
    $form['#submit'][] = 'dfc_points_award_grant_points_invite_form';
    $form['actions']['submit']['#submit'][] = 'dfc_points_award_grant_points_invite_form';
  }
  else if ($form_id == 'user_profile_form') {
//    $form['actions']['submit']['#submit'][] = 'dfc_points_award_grant_points_upload';
    $form['#submit'][] = 'dfc_points_award_grant_points_upload';
  }
}

function dfc_points_award_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'media_item') {
    $settings['dfcPointsAward']['awarded'] = dfc_points_award_check_video_awarded($node->nid);
    $settings['dfcPointsAward']['vid'] = $node->nid;
    $settings['dfcPointsAward']['vcode'] = dfc_points_award_get_random_string();
    drupal_add_js($settings, 'setting');
    drupal_add_js(drupal_get_path('module', 'dfc_points_award') . '/js/award_video.js');
  }
}

function dfc_points_award_video ($vid, $time) {
  $ret = array('success' => FALSE);

  if(!dfc_points_award_check_video_awarded($vid)) {
    $video_points = array(
        'points' => 10,
        'entity_type' => 'node',
        'entity_id' => $vid
    );
    dfc_points_award_grant_points($video_points);
    watchdog('dfc', 'awarding video points');
    $ret['success'] = TRUE;
  }

  drupal_json_output($ret);
}

function dfc_points_award_check_video_awarded($vid) {
  global $user;
  $chk = db_select('userpoints_txn', 'upt')
      ->fields('upt')
      ->condition('uid', $user->uid)
      ->condition('entity_type', 'node')
      ->condition('entity_id', $vid)
      ->execute()->fetchAssoc();

  if($chk) {
    return TRUE;
  }
  return FALSE;
}

function dfc_points_award_link ($vid, $time) {
  //@todo verify points
  $link_points = 10;
  dfc_points_award_grant_points($link_points);
  watchdog('dfc', 'awarding link points');
}

function dfc_points_award_grant_points_invite_form_validate(&$form, &$form_state) {
  global $user;
  $max_invites = 10;
  $num = sizeof(db_select('invite', 'i')->fields('i')->condition('uid', $user->uid)->execute()->fetchALLAssoc('iid'));
  if($num > $max_invites) {
    form_set_error('invitation_email_address', "You've already invited your maximum of {$max_invites} people");
    return FALSE;
  }

  return TRUE;
}

function dfc_points_award_grant_points_invite_form(&$form, &$form_state) {
  $invite_points = 10;
  dfc_points_award_grant_points($invite_points);
  $form_state['redirect'] = '/user';
}

function dfc_points_award_grant_points($points) {
  userpoints_userpointsapi($points);
}

function dfc_points_award_grant_points_upload(&$form, &$form_state) {
  global $user;
  if($form_state['values']['field_user_images']) {
    $imgs_num_u = $user->field_user_images ? sizeof($user->field_user_images[LANGUAGE_NONE]) : 0;
    $imgs_num_f = sizeof($form_state['values']['field_user_images'][LANGUAGE_NONE]);

    if ($form_state['values']['field_user_images'][LANGUAGE_NONE][0]['fid'] == 0) {
      $imgs_num_f--;
    }

    if ($imgs_num_f > $imgs_num_u) {
      //new upload, award points
      dfc_points_award_grant_points(10);
    }
  }
}

function dfc_points_award_rules_condition_info() {
  return array(
    'dfc_points_award_condition_check_refer' => array(
      'label' => t('Check if user was referred'),
      'arguments' => array(
        'user' => array('type' => 'user', 'label' => t('User Signing Up')),
      ),
      'group' => t('DFC'),
    ),
    'dfc_points_award_condition_check_refer' => array(
      'label' => t('Check if user was referred'),
      'arguments' => array(
        'user' => array('type' => 'user', 'label' => t('User Signing Up')),
      ),
      'group' => t('DFC'),
    ),
  );
}

function dfc_points_award_rules_action_info() {
  return array(
    'dfc_points_award_action_load_invite_user' => array(
      'label' => t('Load inviting user'),
      'arguments' => array(
          'user' => array('type' => 'user', 'label' => t('User Signing Up')),
      ),
      'new variables' => array(
        'invite_user' => array(
          'type' => 'user',
          'label' => t('Invite User'),
          'save' => TRUE,
        ),
      ),
      'group' => t('DFC'),
    )
  );
}

function dfc_points_award_condition_check_refer($user) {
  if(dfc_points_award_action_load_invite_user($user)) {
    return TRUE;
  }
  return FALSE;
}

function dfc_points_award_action_load_invite_user($user) {
  $invite = db_select('invite', 'i')
    ->fields('i')
    ->condition('invitee', $user->uid)
    ->execute()
    ->fetchAssoc();

  if ($invite->uid) {
    $invite_user = user_load($invite->uid);
    if ($invite_user) {
      return array('user' => $invite_user);
    }
  }
  return FALSE;
}

function dfc_points_award_get_random_string($length = 10) {
  $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  $charactersLength = strlen($characters);
  $randomString = '';
  for ($i = 0; $i < $length; $i++) {
    $randomString .= $characters[rand(0, $charactersLength - 1)];
  }
  return $randomString;
}